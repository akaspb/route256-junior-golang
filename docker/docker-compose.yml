# 1. Запускаете ранее установленный Docker
# 2. Скачиваете данный файл к себе на компьютер
# 3. Переходите в директорию с файлом docker-compose.yml
#  - Поднять базу данных можно при помощи команды: `docker-compose -f docker/docker-compose.yml up -d`
#  - Остановить базу данных можно при помощи команды: `docker-compose -f docker/docker-compose.yml stop`
#  - Проверить статус контейнера можно при помощи команды: `docker-compose -f docker/docker-compose.yml ps`

version: '3.1'

volumes:
  postgresql_data:

services:
  route256_db:
    image: postgres:15-alpine
    ports:
      - "5433:5432"

    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: route256_db


  kafka-ui:
    container_name: route256-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29092
      DYNAMIC_CONFIG_ENABLED: "true"

  kafka1:
    container_name: route256-kafka
    image: confluentinc/cp-kafka:7.7.1
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka1:29092,CONTROLLER://kafka1:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk' #https://sleeplessbeastie.eu/2021/10/22/how-to-generate-kafka-cluster-id/

  kafka-init-topics:
    container_name: route256-init-topics
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - kafka1
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      kafka-topics.sh --create --topic pvz.events-log --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka1:29092'
    "
